<link rel="stylesheet" href="/css/table-user.css">
<link rel="stylesheet" href="/css/responsiveTable.css">
<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
<div class="details-section">
    <div class="top-options">

        <div class="user1-count m-auto mt-2">

            <h3>Active Offers</h3>
            <h2>{{count}}</h2>
        </div>

    </div>

    <div class="ms-auto me-auto mt-1">

        <main class="table" id="customers_table">
            <section class="table__header">
                <h1>Offers Details</h1>

                <div class="input-group1">
                    <input type="search" placeholder="Search Data...">
                    <i class="fa-solid fa-magnifying-glass bg-transparent "></i>
                </div>
                <a href="/admin/createoffer" class=" btn btn-dark text-decoration-none">

                    Create Offer
                </a>

                <div class="export__file" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <label for="export-file" class="export__file-btn" title="Create Offers"></label>
                    <input type="checkbox" id="export-file">
                </div>

            </section>
            <section class="table__body1">
                <table>
                    <thead>
                        <tr>
                            <th> SL <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Offers Title <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Category <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Start Date <span class="icon-arrow">&UpArrow;</span></th>
                            <th> End Date <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Discouont Type <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Discount Value <span class="icon-arrow">&UpArrow;</span></th>
                            <th> Change <span class="icon-arrow">&UpArrow;</span></th>
                        </tr>
                    </thead>
                    {{#each offerData}}
                    <tbody>
                        <tr>
                            <td>{{inc @index}} </td>
                            <td>{{this.offer_title}}</td>
                            <td> {{this.offer_category.category}} </td>
                            <td> {{formatDate this.offer_start_date}} </td>
                            <td> {{formatDate this.offer_end_date}} </td>
                            {{#if this.discount_type}}
                            <td> Amount </td>
                            {{else}}
                            <td> Percentage</td>
                            {{/if}}

                            <td> {{this.discount_value}} </td>
                            <td>
                                <button class="btn btn-danger  delete-button pe-4" data-id="{{this.offer_category}}"
                                    data-offer-id="{{this._id}}"><i class="fa-solid fa-trash "> </i> Delete</button>

                                <a href="/admin/editoffer/{{this._id}}">
                                    <button class="btn btn-info  edit-button pe-5 " data-bs-toggle="modal"
                                        data-bs-target="#EditModal" data-bs-category="{{this._id.category}}">


                                        <i class="fa-solid fa-pen-to-square"></i>Edit</button>
                                </a>

                            </td>
                        </tr>
                    </tbody>
                    {{/each}}
                </table>
            </section>
        </main>


    </div>


    {{!-- modal for create category starts --}}




    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-dark bg-opacity-50  ">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create New Offers</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="/admin/createoffer" method="post">
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Offer Title:</label>
                            <input type="text" name="OfferTitle" placeholder="enter Offer Title" class="form-control"
                                id="recipient-name">
                        </div>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Category:</label>
                            <select class="form-select" name="category" id="">
                                {{#each categories}}
                                <option value="{{this.category}}">{{this.category}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Expire Date</label>
                            <input type="text" name="expireDate" placeholder="enter Expire Date" class="form-control"
                                id="recipient-name">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Discount Type</label>
                            <div class="form-check">

                                <input class="form-check-input" type="radio" name="discountType"
                                    id="editdiscountPercentage" value="percentage" checked>
                                <label class="form-check-label" for="discountPercentage">
                                    Discount Percentage
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="discountType" id="editdiscountAmount"
                                    value="amount">
                                <label class="form-check-label" for="discountAmount">
                                    Discount Amount
                                </label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Discount Value</label>
                            <input type="text" name="discountValue" placeholder="enter Discount Value"
                                class="form-control" id="recipient-name">
                        </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {{!-- modal for create category end --}}

    {{!-- modal for edit category --}}
    <div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning ">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create New Offers</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="/admin/edit_category" method="post">
                        <div class="mb-3">
                            <input type="hidden" name="categoryName" placeholder="enter category name"
                                class="form-control" id="category-name">
                        </div>
                        <div class="mb-3">
                            <label for="category-name" class="col-form-label">Change to:</label>
                            <input type="text" name="newOffersName" placeholder="enter category name"
                                class="form-control" id="category-name-new">
                        </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-warning">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {{!-- modal for edit category --}}
</div>


</div>
</div>



<script>


    const deleteButton = document.querySelectorAll('.delete-button')

    deleteButton.forEach((btn) => {



        btn.addEventListener('click', () => {

            swal({
                title: "Are you sure?",
                text: "Do you want to delete this item?",
                icon: "warning",
                buttons: ["Cancel", "Yes"],
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {

                        fetch('/admin/deleteoffer', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ itemId: btn.getAttribute('data-id'), offerId: btn.getAttribute('data-offer-id') }),
                        })
                            .then(response => response.json())
                            .then(data => {

                                if (data) {
                                    swal("The item has been deleted!", {
                                        icon: "success",
                                    }).then(() => {

                                        location.reload();
                                    })

                                } else {
                                    swal("There was a problem deleting the item.", {
                                        icon: "error",
                                    });
                                }
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                swal("Failed to delete the item due to an error.", {
                                    icon: "error",
                                });
                            });

                    } else {
                        swal("The item is safe!");
                    }
                });

        })
    })












    const editmodal = document.getElementById('EditModal');

    if (editmodal) {

        editmodal.addEventListener('show.bs.modal', event => {
            // Button that triggered the modal
            const button = event.relatedTarget;

            // Extract info from data-bs-* attributes
            const category = button.getAttribute('data-bs-category');
            console.log(category)
            // Update the modal's content.
            const modalTitle = editmodal.querySelector('.modal-title');
            const categoryname = editmodal.querySelector('#category-name');

            modalTitle.textContent = `Edit ${category}`;
            categoryname.value = category;


        });
    }





    const search = document.querySelector('.input-group1 input'),
        table_rows = document.querySelectorAll('tbody tr'),
        table_headings = document.querySelectorAll('thead th');

    // 1. Searching for specific data of HTML table
    search.addEventListener('input', searchTable);

    function searchTable() {
        table_rows.forEach((row, i) => {
            let table_data = row.textContent.toLowerCase(),
                search_data = search.value.toLowerCase();

            row.classList.toggle('hide', table_data.indexOf(search_data) < 0);
            row.style.setProperty('--delay', i / 25 + 's');
        })

        document.querySelectorAll('tbody tr:not(.hide)').forEach((visible_row, i) => {
            visible_row.style.backgroundColor = (i % 2 == 0) ? 'transparent' : '#0000000b';
        });
    }

    // 2. Sorting | Ordering data of HTML table

    table_headings.forEach((head, i) => {
        let sort_asc = true;
        head.onclick = () => {
            table_headings.forEach(head => head.classList.remove('active'));
            head.classList.add('active');

            document.querySelectorAll('td').forEach(td => td.classList.remove('active'));
            table_rows.forEach(row => {
                row.querySelectorAll('td')[i].classList.add('active');
            })

            head.classList.toggle('asc', sort_asc);
            sort_asc = head.classList.contains('asc') ? false : true;

            sortTable(i, sort_asc);
        }
    })


    function sortTable(column, sort_asc) {
        [...table_rows].sort((a, b) => {
            let first_row = a.querySelectorAll('td')[column].textContent.toLowerCase(),
                second_row = b.querySelectorAll('td')[column].textContent.toLowerCase();

            return sort_asc ? (first_row < second_row ? 1 : -1) : (first_row < second_row ? -1 : 1);
        })
            .map(sorted_row => document.querySelector('tbody').appendChild(sorted_row));
    }



</script>