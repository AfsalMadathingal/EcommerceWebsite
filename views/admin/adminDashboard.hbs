<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/charts.css/dist/charts.min.css">
<link rel="stylesheet" href="/css/dashboard.css">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">



<div class="container">
    <div class="row">
        <div class="col-lg-3 col-sm-6">
            <div class="card-box bg-blue">
                <div class="inner">
                    <h3>{{userCount}} </h3>
                    <p> Total User </p>
                </div>
                <div class="icon">
                    <i class="fa-solid fa-users"></i>
                </div>
                <a href="/admin/user_management" class="card-box-footer">View More <i
                        class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="card-box bg-green">
                <div class="inner">
                    <h3> â‚¹{{totalAmount}} </h3>
                    <p> Total Revenue </p>
                </div>
                <div class="icon">
                    <i class="fa fa-money" aria-hidden="true"></i>
                </div>
                <a href="/admin/ordersManagement" class="card-box-footer">View More <i
                        class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="card-box bg-orange">
                <div class="inner">
                    <h3> {{orderCount}} </h3>
                    <p> Total Orders </p>
                </div>
                <div class="icon">
                    <i class="fa-solid fa-cart-shopping"></i>
                </div>
                <a href="/admin/ordersManagement" class="card-box-footer">View More <i
                        class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="card-box bg-red">
                <div class="inner">
                    <h3> {{productCount}} </h3>
                    <p> Total Products </p>
                </div>
                <div class="icon">
                    <i class="fa-solid fa-bag-shopping"></i>
                </div>
                <a href="/admin/products_management" class="card-box-footer">View More <i
                        class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3 col-sm-6">



        </div>
    </div>
</div>

<div class=" h-50 ms-1 me-1  pb-5 w-50  border bg-warning   rounded-4 me-lg-auto ms-lg-auto ">
    <div class="p-2 d-flex  ">
        <button class="btn btn-primary m-1   days" data-value="7" type="button">7 Day</button>
        <button class="btn btn-primary m-1  days" data-value="14" type="button">14 Day</button>
        <button class="btn btn-primary  m-1   days" data-value="30" type="button">30 Day</button>
        <div class="dropdown ms-auto ">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown"
                aria-expanded="false">
               <i class="fa-solid fa-file-invoice"></i> Sales Report
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item report-button" id="daily-report" data-report="1" href="/admin/salesreport/r1"><i class="fa-solid fa-calendar-days"></i> Daily</a></li>
                <li><a class="dropdown-item report-button" id="weekly-report" data-report="7" href="/admin/salesreport/r7"> <i class="fa-solid fa-calendar-days"></i> Weekly</a></li>
                <li><a class="dropdown-item report-button" id="yearly-reportt" data-report="365" href="/admin/salesreport/r365"> <i class="fa-solid fa-calendar-days"></i> Monthly</a>
                </li>
            </ul>
        </div>
    </div>




    <div class="pe-5 bg-white " id="chart"></div>

</div>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>


<script>

    // Replace Math.random() with a pseudo-random number generator to get reproducible results in e2e tests
    // Based on https://gist.github.com/blixt/f17b47c62508be59987b
    var _seed = 42;
    Math.random = function () {
        _seed = _seed * 16807 % 2147483647;
        return (_seed - 1) / 2147483646;
    };



  /*  document.addEventListener('DOMContentLoaded', () => {

        const reportButton = document.querySelectorAll('.report-button')


        reportButton.forEach((element) => {


            element.addEventListener('click', (e) => {
                e.preventDefault()

                const filter = element.getAttribute('data-report')

                console.log("clicked:", filter)

                fetch('/admin/salesreport', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({filter}),
                })
                    .then(response => response.json())
                    .then(data => {
                        
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });



            })

        })
    })

*/





</script>






<script>
    window.Promise ||
        document.write(
            '<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"><\/script>'
        )
    window.Promise ||
        document.write(
            '<script src="https://cdn.jsdelivr.net/npm/eligrey-classlist-js-polyfill@1.2.20171210/classList.min.js"><\/script>'
        )
    window.Promise ||
        document.write(
            '<script src="https://cdn.jsdelivr.net/npm/findindex_polyfill_mdn"><\/script>'
        )
</script>





{{!--
<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const option = document.querySelectorAll('.days');
        let filter;
        let dataForChart;
        console.log(filter);
        const updateChart = function () {
            let date = [];
            let order = [];
            let revenue = [];

            dataForChart.map((val) => {
                date.push(val._id.date);
                order.push(val.totalOrders);
                revenue.push(val.totalAmount);
            });

            var options = {
                series: [{
                    name: 'orders',
                    type: 'column',
                    data: order
                }, {
                    name: 'Revenue',
                    type: 'column',
                    data: revenue
                }],
                chart: {
                    height: 350,
                    type: 'line',
                    stacked: false
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    width: [1, 1, 4]
                },
                title: {
                    text: 'Orders and Revenue Details ',
                    align: 'left',
                    offsetX: 110
                },
                xaxis: {
                    categories: date
                },
                yaxis: [
                    {
                        axisTicks: {
                            show: true,
                        },
                        axisBorder: {
                            show: true,
                            color: '#008FFB'
                        },
                        labels: {
                            style: {
                                colors: '#008FFB',
                            }
                        },
                        title: {
                            text: "Orders",
                            style: {
                                color: '#008FFB',
                            }
                        },
                        tooltip: {
                            enabled: true
                        }
                    },
                    {
                        seriesName: 'Income',
                        opposite: true,
                        axisTicks: {
                            show: true,
                        },
                        axisBorder: {
                            show: true,
                            color: '#00E396'
                        },
                        labels: {
                            style: {
                                colors: '#00E396',
                            }
                        },
                        title: {
                            text: "Revenue",
                            style: {
                                color: '#00E396',
                            }
                        },
                    }
                ],
                tooltip: {
                    fixed: {
                        enabled: true,
                        position: 'topLeft',
                        offsetY: 30,
                        offsetX: 60
                    },
                },
                legend: {
                    horizontalAlign: 'left',
                    offsetX: 40
                }
            };

            var chart = new ApexCharts(document.querySelector("#chart"), options);
            chart.render();
        }

        if (filter) {
            const chartPost = async function (filter) {
                try {
                    const response = await fetch('/admin/chartdata', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ filter: filter }),
                    });

                    dataForChart = await response.json();
                    updateChart(); // Call a function to update the chart with the new data
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            }
        } else {
            const chartPost = async function (filter) {
                try {
                    const response = await fetch('/admin/chartdata', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ filter: filter }),
                    });

                    dataForChart = await response.json();
                    updateChart(); // Call a function to update the chart with the new data
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            }
            await chartPost(7);
        }




        option.forEach((element) => {

            element.addEventListener('click', async (e) => {

                const button = e.target
                filter = button.getAttribute('data-value');
                console.log(filter);

                const chartPost = async function (filter) {
                    try {
                        const response = await fetch('/admin/chartdata', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ filter: filter }),
                        });

                        dataForChart = await response.json();
                        updateChart(); // Call a function to update the chart with the new data
                    } catch (error) {
                        console.error('Error fetching data:', error);
                    }
                }

                await chartPost(filter);

            });


        })





    });
</script> --}}

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const option = document.querySelectorAll('.days');
        let filter;
        let dataForChart;

        const chartPost = async function (filter) {
            try {
                const response = await fetch('/admin/chartdata', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ filter: filter }),
                });

                dataForChart = await response.json();
                updateChart(); // Call a function to update the chart with the new data
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        const updateChart = function () {
            let date = [];
            let order = [];
            let revenue = [];

            dataForChart.map((val) => {
                date.push(val._id.date);
                order.push(val.totalOrders);
                revenue.push(val.totalAmount);
            });

            var options = {
                series: [{
                    name: 'orders',
                    type: 'column',
                    data: order
                }, {
                    name: 'Revenue',
                    type: 'column',
                    data: revenue
                }],
                chart: {
                    height: 350,
                    type: 'line',
                    stacked: false
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    width: [1, 1, 4]
                },
                title: {
                    text: 'Orders and Revenue Details ',
                    align: 'left',
                    offsetX: 110
                },
                xaxis: {
                    categories: date
                },
                yaxis: [
                    {
                        axisTicks: {
                            show: true,
                        },
                        axisBorder: {
                            show: true,
                            color: '#008FFB'
                        },
                        labels: {
                            style: {
                                colors: '#008FFB',
                            }
                        },
                        title: {
                            text: "Orders",
                            style: {
                                color: '#008FFB',
                            }
                        },
                        tooltip: {
                            enabled: true
                        }
                    },
                    {
                        seriesName: 'Income',
                        opposite: true,
                        axisTicks: {
                            show: true,
                        },
                        axisBorder: {
                            show: true,
                            color: '#00E396'
                        },
                        labels: {
                            style: {
                                colors: '#00E396',
                            }
                        },
                        title: {
                            text: "Revenue",
                            style: {
                                color: '#00E396',
                            }
                        },
                    }
                ],
                tooltip: {
                    fixed: {
                        enabled: true,
                        position: 'topLeft',
                        offsetY: 30,
                        offsetX: 60
                    },
                },
                legend: {
                    horizontalAlign: 'left',
                    offsetX: 40
                }
            };

            var chart = new ApexCharts(document.querySelector("#chart"), options);
            chart.render();
        }

        // Initial chart load
        await chartPost(7);

        option.forEach((element) => {
            element.addEventListener('click', async (e) => {
                const button = e.target
                filter = button.getAttribute('data-value');
                console.log(filter);

                // Fetch data and update chart
                await chartPost(filter);
            });
        });
    });
</script>




<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.bundle.min.js"></script>