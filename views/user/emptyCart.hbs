
{{>userNav}}
<!-- Shoping Cart -->

<i class="fa-solid fa-cart-shopping"></i>

{{>userFooter}}

<script>


    
// Get all elements with the class 'product-price'
    const priceElements = document.querySelectorAll('.product-price');

    // Initialize total price variable
    let totalPrice = 0;

    console.log(priceElements)
    // Iterate over each element and accumulate the prices
    priceElements.forEach((element) => {
        const priceText = element.textContent.trim();
        const priceValue = parseFloat(priceText.replace('₹', ''));
        totalPrice += priceValue;
        console.log(priceText)
        console.log(totalPrice)
        console.log(priceValue)
    });

    // Update the total price in the designated element
    const totalPriceElement = document.getElementById('Subtotal');
    const total = document.getElementById('total')
    totalPriceElement.textContent = `₹ ${totalPrice}`;
    total.textContent = `₹ ${totalPrice}`; 


    /*$(document).ready(function () {
        // Use event delegation on a static parent element (replace "table" with the appropriate parent)
        $('table').on('click', '.cart-item-remove-button', function (event) {
            const cartId = $(this).closest('tr').data('user-id');
            const removeButton = $(this);
            const tr = $(this).closest('tr')
            event.preventDefault()

            $.ajax({
                url: '/profile/mycart/remove',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ cartId }),
                success: function (response) {

                    
                
                            tr[0].parentNode.removeChild(tr[0]);
                            console.log(response)
                   

                    console.log('Server response:', response);
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });
    }); */


document.addEventListener('DOMContentLoaded', function () {
    // Use event delegation on a static parent element (replace "table" with the appropriate parent)
    document.querySelector('table').addEventListener('click', function (event) {
        if (event.target.classList.contains('cart-item-remove-button')) {
            event.preventDefault();

            const cartId = event.target.closest('tr').dataset.userId;
            const tr = event.target.closest('tr');
            const Subtotal= document.getElementById('Subtotal')
            const total= document.getElementById('total')

            fetch('/profile/mycart/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ cartId }),
            })
            .then(response => response.json())
            .then(data => {
                // Manually remove the <tr> element
                tr.parentNode.removeChild(tr);
                Subtotal.textContent=data
                total.textContent=data

                console.log('Server respons  sdfse:', data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    });
});









    // Use a class instead of an ID for quantity containers
    var quantityContainers = document.querySelectorAll('.wrap-num-product');

    quantityContainers.forEach(function (container) {
        container.addEventListener('click', function (event) {
            var target = event.target;

            // Check if the clicked element is the "Increment" or "Decrement" button
            if (target.classList.contains('btn-num-product-up')) {
                incrementQuantity(target);
            } else if (target.classList.contains('btn-num-product-down')) {
                decrementQuantity(target);
            }
        });
    });

    function incrementQuantity(clickedButton) {



        var inputElement = clickedButton.parentNode.querySelector('.num-product');
        var newValue = parseInt(inputElement.value) + 1;
        inputElement.value = newValue;

       
        const tableRow = clickedButton.closest('.data-row'); 
        const cartIdForUpdate = tableRow.getAttribute('data-user-id');
        const pricePerItem= document.getElementById(`totalPerItem-${cartIdForUpdate}`)
        const Subtotal= document.getElementById('Subtotal')
        const total= document.getElementById('total')

        console.log(cartIdForUpdate);

        fetch('/profile/mycart/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ cartIdForUpdate, newValue }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {

        
                 data.items.forEach((element)=>{

                            if(element._id==cartIdForUpdate)
                            {
                                    pricePerItem.textContent=element.totalAmount
                                    Subtotal.textContent=data.cartValue
                                    total.textContent=data.cartValue
                            }
                        })
                console.log('Server response:', data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function decrementQuantity(clickedButton) {

        var inputElement = clickedButton.parentNode.querySelector('.num-product');
        var newValue = parseInt(inputElement.value) - 1;

        if (newValue > 0) {
            inputElement.value = newValue;

            // Assuming you have a reference to the table row element, for example:
            const tableRow = clickedButton.closest('.data-row');
            const cartIdForUpdate = tableRow.getAttribute('data-user-id');
            const pricePerItem= document.getElementById(`totalPerItem-${cartIdForUpdate}`)
            const Subtotal= document.getElementById('Subtotal')
            const total= document.getElementById('total')

            console.log(cartIdForUpdate);

            fetch('/profile/mycart/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ cartIdForUpdate, newValue }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {

                   


                        data.items.forEach((element)=>{

                            if(element._id==cartIdForUpdate)
                            {
                                    pricePerItem.textContent=element.totalAmount
                                    Subtotal.textContent=data.cartValue
                                    total.textContent=data.cartValue
                            }
                        })
                  
                    console.log('Server response:', data);

                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    }
</script>